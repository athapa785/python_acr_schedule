{"ast":null,"code":"var _jsxFileName = \"/Users/aaditya/Documents/GitHub/python_acr_schedule/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RosterView from './components/RosterView';\nimport Pagination from './components/Pagination';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [rosterWeeks, setRosterWeeks] = useState([]);\n  const [currentWeekIndex, setCurrentWeekIndex] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Group rows from the Excel data into week blocks.\n  // Here we assume each week block begins with a row that contains \"Operations Shift Schedule\".\n  function groupRowsByWeek(rows) {\n    const weeks = [];\n    let currentWeek = null;\n    rows.forEach(row => {\n      const firstCell = row[0] && (typeof row[0] === 'object' ? row[0].value : row[0]) || '';\n      if (firstCell && firstCell.includes(\"Operations Shift Schedule\")) {\n        if (currentWeek) weeks.push(currentWeek);\n        currentWeek = {\n          weekHeader: firstCell,\n          rows: [row]\n        };\n      } else if (currentWeek) {\n        currentWeek.rows.push(row);\n      }\n    });\n    if (currentWeek) weeks.push(currentWeek);\n    return weeks;\n  }\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        // Adjust the URL if your Django server is on a different host/port.\n        const response = await fetch(\"http://localhost:8000/api/schedule/\");\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const data = await response.json();\n        if (data.sheets && data.sheets.length > 0) {\n          const sheet = data.sheets[0]; // Use first sheet for this example\n          if (sheet.data && sheet.data.length > 0) {\n            const weeks = groupRowsByWeek(sheet.data);\n            setRosterWeeks(weeks);\n            setCurrentWeekIndex(0);\n          }\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSchedule();\n  }, []);\n  const goToNext = () => {\n    if (currentWeekIndex < rosterWeeks.length - 1) {\n      setCurrentWeekIndex(currentWeekIndex + 1);\n    }\n  };\n  const goToPrevious = () => {\n    if (currentWeekIndex > 0) {\n      setCurrentWeekIndex(currentWeekIndex - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weekly Operations Shift Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading schedule data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), !loading && !error && rosterWeeks.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RosterView, {\n        sheet: rosterWeeks[currentWeekIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        currentIndex: currentWeekIndex,\n        total: rosterWeeks.length,\n        onPrevious: goToPrevious,\n        onNext: goToNext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : !loading && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No schedule data found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Zdi4lIiffglS5NcTNaeIWUlH5/8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RosterView","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","rosterWeeks","setRosterWeeks","currentWeekIndex","setCurrentWeekIndex","loading","setLoading","error","setError","groupRowsByWeek","rows","weeks","currentWeek","forEach","row","firstCell","value","includes","push","weekHeader","fetchSchedule","response","fetch","ok","Error","statusText","data","json","sheets","length","sheet","err","message","goToNext","goToPrevious","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentIndex","total","onPrevious","onNext","_c","$RefreshReg$"],"sources":["/Users/aaditya/Documents/GitHub/python_acr_schedule/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RosterView from './components/RosterView';\nimport Pagination from './components/Pagination';\nimport './styles/App.css';\n\nfunction App() {\n  const [rosterWeeks, setRosterWeeks] = useState([]);\n  const [currentWeekIndex, setCurrentWeekIndex] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Group rows from the Excel data into week blocks.\n  // Here we assume each week block begins with a row that contains \"Operations Shift Schedule\".\n  function groupRowsByWeek(rows) {\n    const weeks = [];\n    let currentWeek = null;\n    rows.forEach(row => {\n      const firstCell = row[0] && (typeof row[0] === 'object' ? row[0].value : row[0]) || '';\n      if (firstCell && firstCell.includes(\"Operations Shift Schedule\")) {\n        if (currentWeek) weeks.push(currentWeek);\n        currentWeek = {\n          weekHeader: firstCell,\n          rows: [row]\n        };\n      } else if (currentWeek) {\n        currentWeek.rows.push(row);\n      }\n    });\n    if (currentWeek) weeks.push(currentWeek);\n    return weeks;\n  }\n\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        // Adjust the URL if your Django server is on a different host/port.\n        const response = await fetch(\"http://localhost:8000/api/schedule/\");\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const data = await response.json();\n        if (data.sheets && data.sheets.length > 0) {\n          const sheet = data.sheets[0];  // Use first sheet for this example\n          if (sheet.data && sheet.data.length > 0) {\n            const weeks = groupRowsByWeek(sheet.data);\n            setRosterWeeks(weeks);\n            setCurrentWeekIndex(0);\n          }\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSchedule();\n  }, []);\n\n  const goToNext = () => {\n    if (currentWeekIndex < rosterWeeks.length - 1) {\n      setCurrentWeekIndex(currentWeekIndex + 1);\n    }\n  };\n\n  const goToPrevious = () => {\n    if (currentWeekIndex > 0) {\n      setCurrentWeekIndex(currentWeekIndex - 1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Weekly Operations Shift Schedule</h1>\n      {loading && <div className=\"loading\">Loading schedule data...</div>}\n      {error && <div className=\"error\">Error: {error}</div>}\n      {(!loading && !error && rosterWeeks.length > 0) ? (\n        <>\n          <RosterView sheet={rosterWeeks[currentWeekIndex]} />\n          <Pagination \n            currentIndex={currentWeekIndex} \n            total={rosterWeeks.length} \n            onPrevious={goToPrevious} \n            onNext={goToNext}\n          />\n        </>\n      ) : !loading && !error && <p>No schedule data found.</p>}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA;EACA,SAASkB,eAAeA,CAACC,IAAI,EAAE;IAC7B,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAIC,WAAW,GAAG,IAAI;IACtBF,IAAI,CAACG,OAAO,CAACC,GAAG,IAAI;MAClB,MAAMC,SAAS,GAAGD,GAAG,CAAC,CAAC,CAAC,KAAK,OAAOA,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACE,KAAK,GAAGF,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;MACtF,IAAIC,SAAS,IAAIA,SAAS,CAACE,QAAQ,CAAC,2BAA2B,CAAC,EAAE;QAChE,IAAIL,WAAW,EAAED,KAAK,CAACO,IAAI,CAACN,WAAW,CAAC;QACxCA,WAAW,GAAG;UACZO,UAAU,EAAEJ,SAAS;UACrBL,IAAI,EAAE,CAACI,GAAG;QACZ,CAAC;MACH,CAAC,MAAM,IAAIF,WAAW,EAAE;QACtBA,WAAW,CAACF,IAAI,CAACQ,IAAI,CAACJ,GAAG,CAAC;MAC5B;IACF,CAAC,CAAC;IACF,IAAIF,WAAW,EAAED,KAAK,CAACO,IAAI,CAACN,WAAW,CAAC;IACxC,OAAOD,KAAK;EACd;EAEAnB,SAAS,CAAC,MAAM;IACd,MAAM4B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACFd,UAAU,CAAC,IAAI,CAAC;QAChBE,QAAQ,CAAC,IAAI,CAAC;QACd;QACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,UAAUH,QAAQ,CAACI,UAAU,EAAE,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,MAAM,IAAIF,IAAI,CAACE,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;UACzC,MAAMC,KAAK,GAAGJ,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAE;UAC/B,IAAIE,KAAK,CAACJ,IAAI,IAAII,KAAK,CAACJ,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;YACvC,MAAMlB,KAAK,GAAGF,eAAe,CAACqB,KAAK,CAACJ,IAAI,CAAC;YACzCxB,cAAc,CAACS,KAAK,CAAC;YACrBP,mBAAmB,CAAC,CAAC,CAAC;UACxB;QACF;MACF,CAAC,CAAC,OAAO2B,GAAG,EAAE;QACZvB,QAAQ,CAACuB,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACR1B,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDc,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI9B,gBAAgB,GAAGF,WAAW,CAAC4B,MAAM,GAAG,CAAC,EAAE;MAC7CzB,mBAAmB,CAACD,gBAAgB,GAAG,CAAC,CAAC;IAC3C;EACF,CAAC;EAED,MAAM+B,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI/B,gBAAgB,GAAG,CAAC,EAAE;MACxBC,mBAAmB,CAACD,gBAAgB,GAAG,CAAC,CAAC;IAC3C;EACF,CAAC;EAED,oBACEP,OAAA;IAAKuC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxC,OAAA;MAAAwC,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxCnC,OAAO,iBAAIT,OAAA;MAAKuC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAClEjC,KAAK,iBAAIX,OAAA;MAAKuC,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAC,SAAO,EAAC7B,KAAK;IAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACnD,CAACnC,OAAO,IAAI,CAACE,KAAK,IAAIN,WAAW,CAAC4B,MAAM,GAAG,CAAC,gBAC5CjC,OAAA,CAAAE,SAAA;MAAAsC,QAAA,gBACExC,OAAA,CAACH,UAAU;QAACqC,KAAK,EAAE7B,WAAW,CAACE,gBAAgB;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpD5C,OAAA,CAACF,UAAU;QACT+C,YAAY,EAAEtC,gBAAiB;QAC/BuC,KAAK,EAAEzC,WAAW,CAAC4B,MAAO;QAC1Bc,UAAU,EAAET,YAAa;QACzBU,MAAM,EAAEX;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA,eACF,CAAC,GACD,CAACnC,OAAO,IAAI,CAACE,KAAK,iBAAIX,OAAA;MAAAwC,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV;AAACxC,EAAA,CAtFQD,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AAwFZ,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}