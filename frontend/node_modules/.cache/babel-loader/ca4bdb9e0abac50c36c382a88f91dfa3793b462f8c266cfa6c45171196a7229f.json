{"ast":null,"code":"var _jsxFileName = \"/Users/aaditya/Documents/GitHub/python_acr_schedule/frontend/src/components/RosterView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/RosterView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RosterView({\n  sheet\n}) {\n  _s();\n  // Display only the first 8 columns.\n  const displayColCount = 8;\n  const [visibleComment, setVisibleComment] = useState(null);\n\n  // Group rows into shift blocks by detecting shift names.\n  const shiftLabels = [\"Owl Shift\", \"Day Shift\", \"Swing Shift\"];\n  const groupByShift = rows => {\n    const blocks = [];\n    let currentBlock = [];\n    rows.forEach(row => {\n      const firstCell = row[0] && (typeof row[0] === 'object' ? row[0].value : row[0]) || '';\n      if (shiftLabels.some(label => firstCell.includes(label))) {\n        if (currentBlock.length > 0) {\n          blocks.push(currentBlock);\n        }\n        currentBlock = [row];\n      } else if (currentBlock.length > 0) {\n        currentBlock.push(row);\n      }\n    });\n    if (currentBlock.length > 0) blocks.push(currentBlock);\n    return blocks;\n  };\n  if (!sheet) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data available for this week\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 22\n  }, this);\n  const weekHeader = sheet.weekHeader || \"Weekly Schedule\";\n  // Use either sheet.rows or sheet.data depending on the structure.\n  const weekRows = sheet.rows ? sheet.rows.slice(1) : sheet.data.slice(1);\n  const shiftBlocks = groupByShift(weekRows);\n  const handleCellClick = (blockIndex, rowIndex, cellIndex, comment) => {\n    setVisibleComment({\n      blockIndex,\n      rowIndex,\n      cellIndex,\n      comment\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roster-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weekHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), shiftBlocks.length > 0 ? shiftBlocks.map((block, blockIndex) => {\n      const shiftHeader = block[0] && (typeof block[0][0] === 'object' ? block[0][0].value : block[0][0]) || 'Shift';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shift-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"shift-header\",\n          children: shiftHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shift-content\",\n          children: block.slice(1).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shift-row\",\n            children: row.slice(0, displayColCount).map((cell, cellIndex) => {\n              let cellValue = '';\n              let comment = '';\n              if (cell && typeof cell === 'object' && 'value' in cell) {\n                cellValue = cell.value !== undefined ? String(cell.value) : '';\n                comment = cell.comment || '';\n              } else {\n                cellValue = cell !== undefined ? String(cell) : '';\n              }\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cell\",\n                onClick: () => comment && handleCellClick(blockIndex, rowIndex, cellIndex, comment),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cell-content\",\n                  children: cellValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 27\n                }, this), comment && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"comment-indicator\",\n                  title: \"Has comment\",\n                  children: \"\\u2022\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 39\n                }, this), visibleComment && visibleComment.blockIndex === blockIndex && visibleComment.rowIndex === rowIndex && visibleComment.cellIndex === cellIndex && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-tooltip\",\n                  children: visibleComment.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 29\n                }, this)]\n              }, cellIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, this);\n            })\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), blockIndex < shiftBlocks.length - 1 && /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"block-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 55\n        }, this)]\n      }, blockIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No shift data available for this week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(RosterView, \"ZQzGhEeTE/nZZ9dFgdtTVkYVobY=\");\n_c = RosterView;\nexport default RosterView;\nvar _c;\n$RefreshReg$(_c, \"RosterView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RosterView","sheet","_s","displayColCount","visibleComment","setVisibleComment","shiftLabels","groupByShift","rows","blocks","currentBlock","forEach","row","firstCell","value","some","label","includes","length","push","children","fileName","_jsxFileName","lineNumber","columnNumber","weekHeader","weekRows","slice","data","shiftBlocks","handleCellClick","blockIndex","rowIndex","cellIndex","comment","className","map","block","shiftHeader","cell","cellValue","undefined","String","onClick","title","_c","$RefreshReg$"],"sources":["/Users/aaditya/Documents/GitHub/python_acr_schedule/frontend/src/components/RosterView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/RosterView.css';\n\nfunction RosterView({ sheet }) {\n  // Display only the first 8 columns.\n  const displayColCount = 8;\n  const [visibleComment, setVisibleComment] = useState(null);\n\n  // Group rows into shift blocks by detecting shift names.\n  const shiftLabels = [\"Owl Shift\", \"Day Shift\", \"Swing Shift\"];\n  const groupByShift = (rows) => {\n    const blocks = [];\n    let currentBlock = [];\n    rows.forEach(row => {\n      const firstCell = row[0] && (typeof row[0] === 'object' ? row[0].value : row[0]) || '';\n      if (shiftLabels.some(label => firstCell.includes(label))) {\n        if (currentBlock.length > 0) {\n          blocks.push(currentBlock);\n        }\n        currentBlock = [row];\n      } else if (currentBlock.length > 0) {\n        currentBlock.push(row);\n      }\n    });\n    if (currentBlock.length > 0) blocks.push(currentBlock);\n    return blocks;\n  };\n\n  if (!sheet) return <div>No data available for this week</div>;\n\n  const weekHeader = sheet.weekHeader || \"Weekly Schedule\";\n  // Use either sheet.rows or sheet.data depending on the structure.\n  const weekRows = sheet.rows ? sheet.rows.slice(1) : sheet.data.slice(1);\n  const shiftBlocks = groupByShift(weekRows);\n\n  const handleCellClick = (blockIndex, rowIndex, cellIndex, comment) => {\n    setVisibleComment({\n      blockIndex,\n      rowIndex,\n      cellIndex,\n      comment\n    });\n  };\n\n  return (\n    <div className=\"roster-view\">\n      <div className=\"week-header\">\n        <h2>{weekHeader}</h2>\n      </div>\n      {shiftBlocks.length > 0 ? (\n        shiftBlocks.map((block, blockIndex) => {\n          const shiftHeader = block[0] && \n            (typeof block[0][0] === 'object' ? block[0][0].value : block[0][0]) || 'Shift';\n          return (\n            <div key={blockIndex} className=\"shift-block\">\n              <h3 className=\"shift-header\">{shiftHeader}</h3>\n              <div className=\"shift-content\">\n                {block.slice(1).map((row, rowIndex) => (\n                  <div key={rowIndex} className=\"shift-row\">\n                    {row.slice(0, displayColCount).map((cell, cellIndex) => {\n                      let cellValue = '';\n                      let comment = '';\n                      if (cell && typeof cell === 'object' && 'value' in cell) {\n                        cellValue = cell.value !== undefined ? String(cell.value) : '';\n                        comment = cell.comment || '';\n                      } else {\n                        cellValue = cell !== undefined ? String(cell) : '';\n                      }\n                      return (\n                        <div \n                          key={cellIndex} \n                          className=\"cell\" \n                          onClick={() => comment && handleCellClick(blockIndex, rowIndex, cellIndex, comment)}\n                        >\n                          <span className=\"cell-content\">{cellValue}</span>\n                          {comment && <span className=\"comment-indicator\" title=\"Has comment\">•</span>}\n                          {visibleComment &&\n                           visibleComment.blockIndex === blockIndex &&\n                           visibleComment.rowIndex === rowIndex &&\n                           visibleComment.cellIndex === cellIndex && (\n                            <div className=\"comment-tooltip\">\n                              {visibleComment.comment}\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                ))}\n              </div>\n              {blockIndex < shiftBlocks.length - 1 && <hr className=\"block-divider\" />}\n            </div>\n          );\n        })\n      ) : (\n        <div>No shift data available for this week</div>\n      )}\n    </div>\n  );\n}\n\nexport default RosterView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}